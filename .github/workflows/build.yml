name: Build multi-platform Docker image

on:
  workflow_call:
    inputs:
      image-name:
        description: "Name of the Docker image. If it is not on Docker Hub, the registry should be prepended."
        required: true
        type: string
      amd64-runner:
        description: "Runner for amd64"
        required: false
        type: string
        default: "ubicloud-standard-4-ubuntu-2204"
      arm64-runner:
        description: "Runner for arm64"
        required: false
        type: string
        default: "ubicloud-standard-4-arm-ubuntu-2204"
      merge-runner:
        required: false
        type: string
        default: "ubicloud-standard-2-ubuntu-2204"
      fail-fast:
        description: "Fail fast if one of the jobs fails"
        required: false
        type: boolean
        default: false
      registry:
        description: "Address of Docker registry"
        required: false
        type: string
      metadata-flavor:
        description: "Flavor of the metadata"
        required: false
        default: |
          latest=auto
        type: string
      metadata-tags:
        description: "List of tags as key-value pair attributes"
        required: false
        type: string
        default: |
          type=schedule
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=branch
          type=ref,event=pr
          type=sha
      metadata-labels:
        description: "List of custom labels"
        required: false
        type: string
      push-image:
        description: "Push the image to the registry"
        default: false
        type: boolean
      build-args:
        description: "Build arguments for buildx"
        required: false
        type: string
      dockerfile:
        description: "Path to the Dockerfile"
        required: false
        type: string
      sbom:
        description: "Generate SBOM attestation for the build"
        required: false
        type: boolean
      provenance:
        description: "Generate provenance attestation for the build"
        required: false
        type: string
    secrets:
      registry-username:
        description: "Username for Docker registry"
        required: false
      registry-password:
        description: "Password for Docker registry"
        required: false

jobs:
  build:
    name: Docker ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        include:
          - runner: ${{ inputs.amd64-runner }}
            platform: linux/amd64
          - runner: ${{ inputs.arm64-runner }}
            platform: linux/arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          tags: ${{ inputs.metadata-tags }}
          labels: ${{ inputs.metadata-labels }}
          flavor: ${{ inputs.metadata-flavor }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          file: ${{ inputs.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: ${{ inputs.build-args }}
          sbom: ${{ inputs.sbom }}
          provenance: ${{ inputs.provenance }}
          cache-from: type=gha,scope=runner-${{ matrix.runner }}
          cache-to: type=gha,mode=max,scope=runner-${{ matrix.runner }}
          outputs: type=image, "name=${{ inputs.image-name }}"",push-by-digest=true,name-canonical=true,push=${{ inputs.push-image }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: ${{ inputs.push-image }}
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.runner }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    if: ${{ inputs.push-image }}
    runs-on: ${{ inputs.merge-runner }}
    needs: [build]
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          merge-multiple: true
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          tags: ${{ inputs.metadata-tags }}
          labels: ${{ inputs.metadata-labels }}
          flavor: ${{ inputs.metadata-flavor }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ inputs.image-name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ inputs.image-name }}:${{ steps.meta.outputs.version }}
